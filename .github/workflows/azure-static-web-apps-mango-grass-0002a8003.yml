name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Check directory structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Directory listing:"
          ls -la
          echo "Repository structure:"
          find . -type d -maxdepth 2 | sort

      - name: Configure NPM to use only official registry
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config delete registry.cnpmjs.org
          npm config delete registry.npmjs.cf
          npm config set strict-ssl true
          npm cache clean --force
          npm config list

      - name: Create .npmrc file
        run: |
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "fetch-retries=3" >> .npmrc
          echo "fetch-retry-factor=2" >> .npmrc
          echo "fetch-retry-mintimeout=10000" >> .npmrc
          echo "fetch-retry-maxtimeout=60000" >> .npmrc

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      - name: Fix package-lock.json
        run: |
          # Print current directory structure for debugging
          pwd
          ls -la

          # Check if package-lock.json exists
          if [ -f "package-lock.json" ]; then
            # Replace all cnpmjs.org URLs with npmjs.org in package-lock.json
            echo "Fixing package-lock.json..."
            sed -i 's|https://r.cnpmjs.org/|https://registry.npmjs.org/|g' package-lock.json
            sed -i 's|https://r2.cnpmjs.org/|https://registry.npmjs.org/|g' package-lock.json
            sed -i 's|https://registry.cnpmjs.org/|https://registry.npmjs.org/|g' package-lock.json
            sed -i 's|https://registry.npm.taobao.org/|https://registry.npmjs.org/|g' package-lock.json
            sed -i 's|https://registry.npmmirror.com/|https://registry.npmjs.org/|g' package-lock.json
          else
            echo "package-lock.json does not exist, will be generated during npm install"
          fi

      - name: Create fresh package-lock.json (if needed)
        run: |
          # If package-lock.json exists but still has issues, create a fresh one
          if [ -f "package-lock.json" ]; then
            echo "Creating a fresh package-lock.json..."
            mv package-lock.json package-lock.json.bak
            npm install --package-lock-only --registry=https://registry.npmjs.org/ || {
              echo "Failed to create fresh package-lock.json, restoring backup"
              mv package-lock.json.bak package-lock.json
            }
          fi

      - name: Pre-download toggle-selection package
        run: |
          # Create node_modules directory if it doesn't exist
          mkdir -p node_modules/toggle-selection

          # Download the toggle-selection package directly
          echo "Pre-downloading toggle-selection@1.0.6..."
          curl -L https://registry.npmjs.org/toggle-selection/-/toggle-selection-1.0.6.tgz -o toggle-selection-1.0.6.tgz

          # Extract the package
          tar -xzf toggle-selection-1.0.6.tgz -C node_modules/toggle-selection --strip-components=1
          rm toggle-selection-1.0.6.tgz

      - name: Configure npm registry for all packages
        run: |
          # Ensure npm uses only the official registry for all packages
          npm config set registry https://registry.npmjs.org/

          # Explicitly set registry for specific scopes
          npm config set @ant-design:registry https://registry.npmjs.org/
          npm config set @testing-library:registry https://registry.npmjs.org/
          npm config set @babel:registry https://registry.npmjs.org/
          npm config set @types:registry https://registry.npmjs.org/

          # Disable use of any other registries
          npm config set strict-ssl true
          npm config set always-auth false

          # Show npm config
          npm config list

      - name: Install dependencies
        run: |
          # Clean npm cache
          npm cache clean --force

          # First attempt: Install dependencies with strict registry settings
          echo "Attempting npm install..."
          npm install --no-fund --no-audit --prefer-offline --registry=https://registry.npmjs.org/ --no-package-lock || {
            echo "npm install failed, trying npm ci..."
            # Second attempt: Try npm ci as a fallback
            npm ci --no-fund --no-audit --prefer-offline --registry=https://registry.npmjs.org/ || {
              echo "npm ci failed, trying to regenerate package-lock.json..."
              # Third attempt: Remove package-lock.json and try again
              rm -f package-lock.json
              npm install --no-fund --no-audit --prefer-offline --registry=https://registry.npmjs.org/ || {
                echo "All npm install attempts failed, trying with --force flag..."
                # Final attempt: Use --force flag
                npm install --no-fund --no-audit --prefer-offline --registry=https://registry.npmjs.org/ --force
              }
            }
          }

      - name: Build application
        run: |
          CI=false npm run build

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_MANGO_GRASS_0002A8003 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path - using the root directory
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          skip_app_build: true # Skip the build since we're building manually
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_MANGO_GRASS_0002A8003 }}
          action: "close"
